Grammar

    0 $accept: __list $end

    1 __list: _list '\n'
    2       | __list _list '\n'

    3 _list: ε
    4      | list

    5 list: NUM
    6     | NUM ',' list
    7     | NUM ':' list
    8     | NUM ';' list
    9     | NUM '!' list
   10     | NUM '?' list


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 1 2
    '!' (33) 9
    ',' (44) 6
    ':' (58) 7
    ';' (59) 8
    '?' (63) 10
    error (256)
    NUM (258) 5 6 7 8 9 10


Nonterminals, with rules where they appear

    $accept (10)
        on left: 0
    __list (11)
        on left: 1 2
        on right: 0 2
    _list (12)
        on left: 3 4
        on right: 1 2
    list (13)
        on left: 5 6 7 8 9 10
        on right: 4 6 7 8 9 10


State 0

    0 $accept: • __list $end

    NUM  shift, and go to state 1

    $default  reduce using rule 3 (_list)

    __list  go to state 2
    _list   go to state 3
    list    go to state 4


State 1

    5 list: NUM •
    6     | NUM • ',' list
    7     | NUM • ':' list
    8     | NUM • ';' list
    9     | NUM • '!' list
   10     | NUM • '?' list

    ','  shift, and go to state 5
    ':'  shift, and go to state 6
    ';'  shift, and go to state 7
    '!'  shift, and go to state 8
    '?'  shift, and go to state 9

    $default  reduce using rule 5 (list)


State 2

    0 $accept: __list • $end
    2 __list: __list • _list '\n'

    $end  shift, and go to state 10
    NUM   shift, and go to state 1

    $default  reduce using rule 3 (_list)

    _list  go to state 11
    list   go to state 4


State 3

    1 __list: _list • '\n'

    '\n'  shift, and go to state 12


State 4

    4 _list: list •

    $default  reduce using rule 4 (_list)


State 5

    6 list: NUM ',' • list

    NUM  shift, and go to state 1

    list  go to state 13


State 6

    7 list: NUM ':' • list

    NUM  shift, and go to state 1

    list  go to state 14


State 7

    8 list: NUM ';' • list

    NUM  shift, and go to state 1

    list  go to state 15


State 8

    9 list: NUM '!' • list

    NUM  shift, and go to state 1

    list  go to state 16


State 9

   10 list: NUM '?' • list

    NUM  shift, and go to state 1

    list  go to state 17


State 10

    0 $accept: __list $end •

    $default  accept


State 11

    2 __list: __list _list • '\n'

    '\n'  shift, and go to state 18


State 12

    1 __list: _list '\n' •

    $default  reduce using rule 1 (__list)


State 13

    6 list: NUM ',' list •

    $default  reduce using rule 6 (list)


State 14

    7 list: NUM ':' list •

    $default  reduce using rule 7 (list)


State 15

    8 list: NUM ';' list •

    $default  reduce using rule 8 (list)


State 16

    9 list: NUM '!' list •

    $default  reduce using rule 9 (list)


State 17

   10 list: NUM '?' list •

    $default  reduce using rule 10 (list)


State 18

    2 __list: __list _list '\n' •

    $default  reduce using rule 2 (__list)
